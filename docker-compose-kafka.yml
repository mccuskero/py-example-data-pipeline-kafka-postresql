services:
  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - kafka-net
  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093" # For external access if needed
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG4J_ROOT_LOGLEVEL=WARN
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - BITNAMI_DEBUG=TRUE
    networks:
      - kafka-net
#    depends_on:
#      - zookeeper
    
  kafkasetup:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: "no"
    volumes:
      - type: bind
        source: ./scripts/kafka/create-topics.sh
        target: /create-topics.sh
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_CREATE_TOPICS=${KAFKA_CREATE_TOPICS}
      - BITNAMI_DEBUG=TRUE
    entrypoint: [ "bash", "-c", "/create-topics.sh"]

networks:
  kafka-net:
    driver: bridge