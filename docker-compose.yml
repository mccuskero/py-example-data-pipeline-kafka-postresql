# setup a bridged network for all services to communicate with each other
networks:
  flw-pipeline-network:
    driver: bridge

# going to start up the pipeline backwards... to ensure we have a working pipeline
# starting with the flw-clf-test-api service
services:
  flw-clf-test-api:
    image: ${PROJECT_NAME_CLF_TEST_API}:latest
    depends_on:
      kafkasetup:
        condition: service_completed_successfully
    networks:
      - flw-pipeline-network
  flw-4-postprocessor:
    image: ${PROJECT_NAME_POSTPROCESSOR}:latest
    depends_on:
      - flw-clf-test-api
    networks:
      - flw-pipeline-network
  flw-3-clf-test-handler:
    image: ${PROJECT_NAME_CLF_TEST_HANDLER}:latest
    depends_on:
      - flw-4-postprocessor
    networks:
      - flw-pipeline-network
  flw-2-preprocessor:
    image: ${PROJECT_NAME_PREPROCESSOR}:latest
    depends_on:
      - flw-3-clf-test-handler
    networks:
      - flw-pipeline-network
  flw-1-ingestor:
    image: ${PROJECT_NAME_INGESTOR}:latest
    depends_on:
      - flw-2-preprocessor
    networks:
      - flw-pipeline-network

  # install kafka service
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - 9092:9092

    networks:
      - flw-pipeline-network

  kafkasetup:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    networks:
      - flw-pipeline-network
    restart: "no"
    entrypoint: [ "bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic 'flw.flower_events' --if-not-exists"]

